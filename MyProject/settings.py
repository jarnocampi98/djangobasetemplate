"""
Django settings for MyProject project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$&qxe=-w11$39*+*z5t!m%ronb$nd8p!31rc!7(c@ja47nx_rd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    # ADMIN_INTEFACE (PARTE 1)
    # app per customizare admin-interface nativa di django
    # Per installare pip install django-admin-interface (già installata in questo progetto e inserita in requirements.txt)
    # DOC: https://pypi.org/project/django-admin-interface/
    "admin_interface",
    "colorfield",

    'django.contrib.admin',
    'django.contrib.auth',

    # CLEANUPCONFIG
    # app che elimina automaticamente i file una volta eliminate istanze da db. funziona per i campi FileField e ImageField. 
    # Per installare pip install pip install django-cleanup (già installata in questo progetto e inserita in requirements.txt)
    # DOC: https://pypi.org/project/django-cleanup/
    'django_cleanup.apps.CleanupConfig', 

    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # DJANGO CRISPY FORMS
    # App che genera automaticamente i template per i form 
    # Per installare pip install django-crispy-forms (già installata in questo progetto e inserita in requirements.txt)
    'crispy_forms', 

    # DJANGO CRISPY_BOOTSTRAP5
    # App per utilizzare django crispy forms con bootstrap 5
    # Per installare pip install crispy-bootstrap5 (già installata in questo progetto e inserita in requirements.txt)
    # DOC: https://pypi.org/project/crispy-bootstrap5/
    'crispy_bootstrap5',
    # LE MIE APP

    # ACCOUNT - GESTIRE LA REGISTRAZIONE
    'accounts',

    # CORE - GESTISCE LE ROUTE E LE CONFIGURAZIONI DI BASE (MODEL DI BASE, FORM DI BASE, ECC...)
    'core',

    #APP 1 - ESEMPIO DI APPLICAZIONE
    'app1'

    # REGISTRA LE TUE APP QUI SOTTO
    # Es:
    # 'app2'
    
]

# ADMIN_INTEFACE - CONFIGURAZIONI
X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]

# DJANGO CRISPY FORMS + crispy_bootstrap5 - CONFIGURAZIONI
# Specifico il template per i form utilizzati dall'app django-crispy-forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', # cartella template di base - qui è presente il baseLayout e le pagine per l'autenticazione
                BASE_DIR / 'accounts/templates/', # template per app acoounts
                BASE_DIR / 'core/templates/', # template per app core
                BASE_DIR / 'app1/templates/' # template per app app1
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static-serve'

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = 'media/' # Public URL at the browser

LOGIN_REDIRECT_URL = '/' # route di redirecr della login
LOGOUT_REDIRECT_URL = '/' # route di redirecr della logout

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

